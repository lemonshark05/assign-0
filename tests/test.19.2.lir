struct struct1 {
  f1:int
  f2:&int
}

struct struct2 {
  f1:struct1
  f2:&struct1
}

func1:&() -> int
func2:&(int, &int) -> &struct2
func3:&(int) -> _
g1:int
g2:&int
g3:&&int

extern ext1:() -> int
extern ext2:(int) -> int
extern ext3:(&int, int) -> &int

fn func1() -> int {
entry:
  $ret 42
}

fn func2(p1:int, p2:&int) -> &struct2 {
let _t1:&struct2, x:struct2
entry:
  _t1 = $addrof x
  $ret _t1
}

fn func3(p:int) -> _ {
entry:
  $ret 
}

fn main() -> int {
let _t1:&&&&&&&&int, _t10:&&&int, _t11:&&int, _t12:&int, _t13:&&int, _t14:&int, _t15:&struct1, _t16:struct1, _t17:&&int, _t2:&&&&&&&int, _t3:&&&&&&int, _t4:&&&&&int, _t5:int, _t6:&&&&&int, _t7:&&&&int, _t8:&&&int, _t9:int, id0:&&struct2, id1:&int, id10:&&int, id11:&&int, id2:&&&int, id3:&&&&&int, id4:&&&&&&int, id5:&&&&&&&&int, id6:struct1, id7:struct1, id8:&struct1, id9:&&int
entry:
  id0 = $copy 0
  _t1 = $gep id5 5
  _t2 = $load _t1
  _t3 = $load _t2
  id4 = $copy _t3
  _t4 = $load id4
  id3 = $copy _t4
  _t5 = $call_ext ext1()
  _t6 = $gep id3 _t5
  _t7 = $load _t6
  _t8 = $load _t7
  id2 = $copy _t8
  _t9 = $call_ext ext2(4)
  _t10 = $gep id2 _t9
  _t11 = $load _t10
  _t12 = $load _t11
  id1 = $copy _t12
  id7 = $copy id6
  id6 = $copy id7
  id8 = $copy 0
  id11 = $copy g3
  id10 = $copy id11
  id9 = $copy id10
  id0 = $copy id0
  $store id1 8
  _t13 = $load id2
  _t14 = $load _t13
  $store g3 _t14
  _t15 = $gep id8 2
  _t16 = $load _t15
  id6 = $copy _t16
  g3 = $alloc 1 [_alloc1]
  _t17 = $addrof g2
  id9 = $copy _t17
  $ret 0
}

