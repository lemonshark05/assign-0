struct struct1 {
  f1:int
  f2:&struct1
}

func1:&(int) -> int
func12:&(int) -> _
func2:&(&int) -> &struct1
func22:&(&int) -> _
func3:&(&int, &&int) -> int
func32:&(&int, &&int) -> _
g1:&struct1

extern ext1:() -> int
extern ext2:(int) -> _
extern ext3:(&int) -> _

fn func1(s:int) -> int {
let x:int, y:&int, z:&struct1
entry:
  $ret s
}

fn func12(s:int) -> _ {
let x:int, y:&int, z:&struct1
entry:
  $ret 
}

fn func2(p:&int) -> &struct1 {
let _t1:&int, _t2:int, x:&struct1
entry:
  x = $alloc 12 [_alloc1]
  _t1 = $gfp x f1
  _t2 = $load p
  $store _t1 _t2
  $ret x
}

fn func22(p:&int) -> _ {
let _t1:&int, _t2:int, x:&struct1
entry:
  x = $alloc 12 [_alloc2]
  _t1 = $gfp x f1
  _t2 = $load p
  $store _t1 _t2
  $ret 
}

fn func3(q:&int, r:&&int) -> int {
let _t1:&int, _t2:int
entry:
  _t1 = $load r
  $store _t1 42
  _t2 = $load q
  $ret _t2
}

fn func32(q:&int, r:&&int) -> _ {
let _t1:&int
entry:
  _t1 = $load r
  $store _t1 42
  $ret 
}

fn main() -> int {
let _lo1:int, _lo2:int, _t10:&&struct1, _t11:&struct1, _t12:&&int, _t13:&int, _t14:&&int, _t15:int, _t16:&int, _t17:&&struct1, _t18:&int, _t19:int, _t20:&struct1, _t21:&int, _t22:&&struct1, _t23:&struct1, _t24:&int, _t25:int, _t26:&struct1, _t27:&&struct1, _t28:&struct1, _t29:int, _t3:&&int, _t30:&&&struct1, _t31:&&struct1, _t32:&&struct1, _t33:&struct1, _t34:&int, _t35:int, _t4:&int, _t5:int, _t6:&struct1, _t7:struct1, _t8:&struct1, _t9:struct1, id0:&struct1, id1:&&int, id10:&int, id11:&int, id12:&&&struct1, id2:&int, id3:&&&int, id4:struct1, id5:struct1, id6:int, id7:&&struct1, id8:&&struct1, id9:&int
bb1:
  _t11 = $gep id0 _t15
  $store _t11 id4
  id2 = $copy id2
  _t16 = $addrof id6
  $call_dir func22(_t16) then bb2

bb2:
  _t18 = $gep id2 6
  _t19 = $load _t18
  _t17 = $gep id7 _t19
  _t20 = $load _t17
  _t21 = $gfp _t20 f1
  $store _t21 7
  $branch 0 bb4 bb5

bb3:
  _t22 = $gep id8 _lo1
  _t23 = $load _t22
  _t24 = $gfp _t23 f1
  _t25 = $load _t24
  id6 = $copy _t25
  _t26 = $call_dir func2(id2) then bb6

bb4:
  _lo1 = $copy 0
  $jump bb3

bb5:
  _lo1 = $copy 1
  $jump bb3

bb6:
  _t27 = $gfp _t26 f2
  _t28 = $load _t27
  id0 = $copy _t28
  id9 = $copy id9
  $branch 2 bb8 bb9

bb7:
  _t29 = $call_ext ext1()
  _t30 = $gep id12 _t29
  _t31 = $load _t30
  _t32 = $gep _t31 _lo2
  _t33 = $load _t32
  _t34 = $gfp _t33 f1
  _t35 = $load _t34
  $ret _t35

bb8:
  _lo2 = $copy 0
  $jump bb7

bb9:
  _lo2 = $copy 1
  $jump bb7

entry:
  id0 = $copy g1
  id2 = $copy id2
  _t3 = $addrof id2
  id1 = $copy _t3
  id3 = $copy id3
  _t4 = $load id1
  _t5 = $load _t4
  _t6 = $gep id0 _t5
  _t7 = $load _t6
  id5 = $copy _t7
  _t8 = $addrof id5
  _t9 = $load _t8
  id4 = $copy _t9
  id6 = $copy 0
  _t10 = $addrof g1
  id7 = $copy _t10
  id10 = $copy id11
  id9 = $copy id10
  id12 = $copy id12
  _t12 = $gep id1 5
  _t13 = $load _t12
  _t14 = $load id3
  _t15 = $call_dir func3(_t13, _t14) then bb1
}

