struct struct1 {
  f1:int
  f2:&struct1
}

func1:&(int) -> int
func12:&(int) -> _
func2:&(&int) -> &struct1
func22:&(&int) -> _
func3:&(&int, &&int) -> int
func32:&(&int, &&int) -> _
g1:&struct1

extern ext1:() -> int
extern ext2:(int) -> _
extern ext3:(&int) -> _

fn func1(s:int) -> int {
let x:int, y:&int, z:&struct1
entry:
  $ret s
}

fn func12(s:int) -> _ {
let x:int, y:&int, z:&struct1
entry:
  $ret 
}

fn func2(p:&int) -> &struct1 {
let _t1:&int, _t2:int, x:&struct1
entry:
  x = $alloc 12 [_alloc1]
  _t1 = $gfp x f1
  _t2 = $load p
  $store _t1 _t2
  $ret x
}

fn func22(p:&int) -> _ {
let _t1:&int, _t2:int, x:&struct1
entry:
  x = $alloc 12 [_alloc2]
  _t1 = $gfp x f1
  _t2 = $load p
  $store _t1 _t2
  $ret 
}

fn func3(q:&int, r:&&int) -> int {
let _t1:&int, _t2:int
entry:
  _t1 = $load r
  $store _t1 42
  _t2 = $load q
  $ret _t2
}

fn func32(q:&int, r:&&int) -> _ {
let _t1:&int
entry:
  _t1 = $load r
  $store _t1 42
  $ret 
}

fn main() -> int {
let _lo1:int, _t10:&&&&struct1, _t11:&&&struct1, _t12:int, _t13:int, _t14:&&int, _t15:&int, _t16:&&&&&int, _t17:&&&&int, _t18:&&&&int, _t19:&&&int, _t2:int, _t20:&int, _t21:int, _t22:int, _t23:&&&int, _t24:&&int, _t25:int, _t26:&&int, _t27:&int, _t28:int, _t29:&int, _t3:int, _t30:int, _t31:&int, _t32:int, _t33:&&&&int, _t34:&&&int, _t35:int, _t36:&&&int, _t37:&&int, _t38:&&int, _t39:&int, _t4:&&&int, _t40:&&int, _t41:&int, _t42:&int, _t43:int, _t44:&&&int, _t45:&&int, _t46:int, _t47:int, _t48:&&int, _t49:&int, _t5:&&int, _t50:&&int, _t51:&int, _t52:&int, _t53:int, _t54:&&int, _t55:&&(&int, &&int) -> _, _t56:&(&int, &&int) -> _, _t57:&&&struct1, _t58:&&struct1, _t59:&&struct1, _t6:int, _t60:&struct1, _t61:&int, _t62:&int, _t63:&int, _t64:int, _t65:int, _t66:int, _t67:int, _t68:&int, _t69:&&&int, _t7:&&&&&struct1, _t70:&&int, _t71:&int, _t72:int, _t8:&&&&struct1, _t9:int, id0:int, id1:&&int, id10:&&int, id11:&&&&int, id12:&&&&&&int, id13:&(int) -> int, id14:&(int) -> int, id15:int, id16:int, id17:int, id18:&int, id19:int, id2:&&&int, id20:&int, id21:&int, id22:&&&int, id23:&int, id24:&int, id3:&int, id4:&&&struct1, id5:&&&struct1, id6:&&&&&struct1, id7:int, id8:int, id9:&int
bb1:
  _t7 = $gep id6 _t6
  _t8 = $load _t7
  _t9 = $call_dir func1(id0) then bb2

bb10:
  _t66 = $cmp neq id9 id18
  _t67 = $arith mul _t66 9
  id0 = $copy _t67
  _t68 = $load id1
  $call_ext ext3(_t68)
  _t69 = $gep id2 id15
  _t70 = $load _t69
  _t71 = $load _t70
  _t72 = $load _t71
  $store id21 _t72
  $ret id16

bb2:
  _t10 = $gep _t8 _t9
  _t11 = $load _t10
  id5 = $copy _t11
  id4 = $copy id5
  _t12 = $call_dir func1(id0) then bb3

bb3:
  id7 = $copy _t12
  _t13 = $arith sub 0 id0
  _t14 = $gep id1 _t13
  _t15 = $load _t14
  id9 = $copy _t15
  id12 = $copy id12
  _t16 = $load id12
  _t17 = $load _t16
  id11 = $copy _t17
  id13 = $copy id14
  id17 = $copy id16
  id16 = $copy id17
  id15 = $copy id16
  _t18 = $gep id11 7
  _t19 = $load _t18
  _t20 = $gep id3 id15
  _t21 = $load _t20
  _t22 = $call_idr id13(_t21) then bb4

bb4:
  _t23 = $gep _t19 _t22
  _t24 = $load _t23
  id10 = $copy _t24
  _t25 = $call_ext ext1()
  _t26 = $gep id10 _t25
  _t27 = $load _t26
  _t28 = $cmp neq id9 _t27
  id8 = $copy _t28
  _t29 = $addrof id19
  id20 = $copy _t29
  _t30 = $call_ext ext1()
  _t31 = $gep id20 _t30
  _t32 = $load _t31
  $branch _t32 bb6 bb7

bb5:
  id19 = $copy _lo1
  _t33 = $gep id11 id19
  _t34 = $load _t33
  _t35 = $arith sub 0 7
  _t36 = $gep _t34 _t35
  _t37 = $load _t36
  _t38 = $gep _t37 4
  _t39 = $load _t38
  id18 = $copy _t39
  id22 = $copy id2
  id23 = $copy id18
  _t40 = $addrof id9
  _t41 = $load _t40
  id24 = $copy _t41
  _t42 = $gep id23 0
  _t43 = $load _t42
  _t44 = $gep id22 _t43
  _t45 = $load _t44
  _t46 = $load id24
  _t47 = $arith sub 0 _t46
  _t48 = $gep _t45 _t47
  _t49 = $load _t48
  id21 = $copy _t49
  _t50 = $gep id1 1
  _t51 = $load _t50
  _t52 = $gep _t51 4
  _t53 = $load _t52
  id0 = $copy _t53
  _t54 = $addrof id3
  id1 = $copy _t54
  _t55 = $addrof func32
  _t56 = $load _t55
  func32 = $copy _t56
  $jump bb8

bb6:
  _lo1 = $copy 0
  $jump bb5

bb7:
  _lo1 = $copy 1
  $jump bb5

bb8:
  $branch id0 bb9 bb10

bb9:
  _t57 = $gep id4 id7
  _t58 = $load _t57
  _t59 = $gep _t58 5
  _t60 = $load _t59
  _t61 = $gfp _t60 f1
  $store _t61 id8
  id3 = $alloc 1 [_alloc3]
  id8 = $copy id17
  _t62 = $gfp g1 f1
  _t63 = $gfp g1 f1
  _t64 = $load _t63
  _t65 = $arith sub 0 _t64
  $store _t62 _t65
  $jump bb8

entry:
  _t2 = $call_ext ext1()
  id0 = $copy _t2
  _t3 = $call_ext ext1()
  _t4 = $gep id2 _t3
  _t5 = $load _t4
  id1 = $copy _t5
  id6 = $copy id6
  _t6 = $call_dir func1(0) then bb1
}

